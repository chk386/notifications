# https://github.com/confluentinc/cp-all-in-one/blob/6.1.1-post/cp-all-in-one/docker-compose.yml

version: '3.9'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    # volumes:
    #   - ~/docker/zookeeper/data:/var/lib/zookeeper/data
    #   - ~/docker/zookeeper/log:/var/lib/zookeeper/log

  # /bin/kafka-topics --create --topic BACKOFFICE-NOTIFICATIONS --bootstrap-server localhost:9092
  # /bin/kafka-topics --describe --topic BACKOFFICE-NOTIFICATIONS --bootstrap-server localhost:9092
  # /bin/kafka-console-producer --topic BACKOFFICE-NOTIFICATIONS --bootstrap-server localhost:9092
  # /bin/kafka-console-consumer --topic BACKOFFICE-NOTIFICATIONS --bootstrap-server localhost:9092
  # /bin/kafka-topics --delete --topic BACKOFFICE-NOTIFICATIONS --bootstrap-server localhost:9092
  kafka:
    image: confluentinc/cp-server:6.1.1
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://133.186.247.62:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8085
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    # volumes:
    #   - ~/docker/kafka/data:/var/lib/kafka/data

#  schema-registry:
#    image: confluentinc/cp-schema-registry:6.1.1
#    hostname: schema-registry
#    container_name: schema-registry
#    depends_on:
#      - kafka
#    restart: always
#    environment:
#      # SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
#      SCHEMA_REGISTRY_HOST_NAME: schema-registry
#      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8085"
#      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka:29092"
#      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_METHODS: "GET,POST,PUT,OPTIONS"
#      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN: "*"
#    ports:
#        - "8084:8085"

#  rest-proxy:
#    image: confluentinc/cp-kafka-rest:6.1.1
#    depends_on:
#      - kafka
#      - schema-registry
#    ports:
#      - 8086:8082
#    hostname: rest-proxy
#    container_name: rest-proxy
#    environment:
#      KAFKA_REST_HOST_NAME: rest-proxy
#      KAFKA_REST_BOOTSTRAP_SERVERS: "kafka:29092"
#      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
#      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8085'
#      KAFKA_REST_ACCESS_CONTROL_ALLOW_METHODS: "GET,POST,PUT,OPTIONS"
#      KAFKA_REST_ACCESS_CONTROL_ALLOW_ORIGIN: "*"

#  kafka-topics-ui:
#    image: landoop/kafka-topics-ui
#    depends_on:
#      - kafka
#      - rest-proxy
#    ports:
#      - 8085:8000
#    hostname: kafka-topics-ui
#    container_name: kafka-topics-ui
#    environment:
#      KAFKA_REST_PROXY_URL: http://rest-proxy:8082
#      PROXY: "true"

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8081:8080"
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: schema-registry:8085
  #     # KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: first
  #     # KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect0:8083

#  zk-ui:
#    image: elkozmon/zoonavigator:latest
#    hostname: zk-ui
#    container_name: zk-ui
#    depends_on:
#      - zookeeper
#    ports:
#      - "8082:8080"
#    restart: always
#    environment:
#      HTTP_PORT: 8080
#      CONNECTION_LOCALZK_NAME: Local zookeeper
#      CONNECTION_LOCALZK_CONN: zookeeper:2181
#
#  schema-registry-ui:
#    image: landoop/schema-registry-ui
#    hostname: schema-ui
#    container_name: schema-ui
#    depends_on:
#      - schema-registry
#    environment:
#      SCHEMAREGISTRY_URL: "http://localhost:8084"
#    ports:
#      - 8083:8000
  
networks: 
  default:
    name: kafka_playground